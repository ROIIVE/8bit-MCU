
RV_MCU_0311.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00803400  00000b9b  00000c4f  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b74  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000027  00008b74  00000b74  00000c28  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000002a  00803432  00803432  00000c81  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00000c81  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ce0  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002c0  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003a3f  00000000  00000000  00000fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000226d  00000000  00000000  00004a1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001332  00000000  00000000  00006c8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004f0  00000000  00000000  00007fc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001aa6  00000000  00000000  000084b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000874  00000000  00000000  00009f56  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000230  00000000  00000000  0000a7ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  10:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  2c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  34:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  3c:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__vector_15>
  40:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  44:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  48:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  54:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  58:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  5c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  60:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  64:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  68:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  6c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  70:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  74:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	df e3       	ldi	r29, 0x3F	; 63
  82:	de bf       	out	0x3e, r29	; 62

00000084 <__do_copy_data>:
  84:	14 e3       	ldi	r17, 0x34	; 52
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b4 e3       	ldi	r27, 0x34	; 52
  8a:	eb e9       	ldi	r30, 0x9B	; 155
  8c:	fb e0       	ldi	r31, 0x0B	; 11
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a2 33       	cpi	r26, 0x32	; 50
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
  9a:	24 e3       	ldi	r18, 0x34	; 52
  9c:	a2 e3       	ldi	r26, 0x32	; 50
  9e:	b4 e3       	ldi	r27, 0x34	; 52
  a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
  a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
  a4:	ac 35       	cpi	r26, 0x5C	; 92
  a6:	b2 07       	cpc	r27, r18
  a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
  aa:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  ae:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <_exit>

000000b2 <__bad_interrupt>:
  b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
  b6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <system_init>
  ba:	08 95       	ret

000000bc <main>:
#include <util/delay.h>

int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
  bc:	0e 94 5b 00 	call	0xb6	; 0xb6 <atmel_start_init>
	Enable_global_interrupt();
  c0:	78 94       	sei

	printf("\r\r**** DESIGNED BY ROIIVE 22.06 ****\r\r");
  c2:	84 e7       	ldi	r24, 0x74	; 116
  c4:	9b e8       	ldi	r25, 0x8B	; 139
  c6:	9f 93       	push	r25
  c8:	8f 93       	push	r24
  ca:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <printf>
  ce:	0f 90       	pop	r0
  d0:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	2a e6       	ldi	r18, 0x6A	; 106
  d4:	84 e0       	ldi	r24, 0x04	; 4
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x1c>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x26>
  e2:	f7 cf       	rjmp	.-18     	; 0xd2 <main+0x16>

000000e4 <BOD_init>:
	//		 | BOD_VLMCFG_BELOW_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	08 95       	ret

000000e8 <CLKCTRL_init>:
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	08 95       	ret

000000ec <CPUINT_init>:
	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	return 0;
}
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	08 95       	ret

000000f0 <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	08 c0       	rjmp	.+16     	; 0x104 <__EEPROM_REGION_LENGTH__+0x4>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
  f4:	e8 2f       	mov	r30, r24
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	e0 5f       	subi	r30, 0xF0	; 240
  fa:	fb 4f       	sbci	r31, 0xFB	; 251
  fc:	90 81       	ld	r25, Z
  fe:	98 60       	ori	r25, 0x08	; 8
 100:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
 102:	8f 5f       	subi	r24, 0xFF	; 255
 104:	88 30       	cpi	r24, 0x08	; 8
 106:	b0 f3       	brcs	.-20     	; 0xf4 <mcu_init+0x4>
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	08 c0       	rjmp	.+16     	; 0x11c <__EEPROM_REGION_LENGTH__+0x1c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
 10c:	e8 2f       	mov	r30, r24
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	e0 5d       	subi	r30, 0xD0	; 208
 112:	fb 4f       	sbci	r31, 0xFB	; 251
 114:	90 81       	ld	r25, Z
 116:	98 60       	ori	r25, 0x08	; 8
 118:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
 11a:	8f 5f       	subi	r24, 0xFF	; 255
 11c:	88 30       	cpi	r24, 0x08	; 8
 11e:	b0 f3       	brcs	.-20     	; 0x10c <__EEPROM_REGION_LENGTH__+0xc>
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	08 c0       	rjmp	.+16     	; 0x134 <__EEPROM_REGION_LENGTH__+0x34>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
 124:	e8 2f       	mov	r30, r24
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	e0 5b       	subi	r30, 0xB0	; 176
 12a:	fb 4f       	sbci	r31, 0xFB	; 251
 12c:	90 81       	ld	r25, Z
 12e:	98 60       	ori	r25, 0x08	; 8
 130:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
 132:	8f 5f       	subi	r24, 0xFF	; 255
 134:	88 30       	cpi	r24, 0x08	; 8
 136:	b0 f3       	brcs	.-20     	; 0x124 <__EEPROM_REGION_LENGTH__+0x24>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
 138:	08 95       	ret

0000013a <USART_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
 13a:	84 b1       	in	r24, 0x04	; 4
 13c:	87 7f       	andi	r24, 0xF7	; 247
 13e:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
 140:	e3 e3       	ldi	r30, 0x33	; 51
 142:	f4 e0       	ldi	r31, 0x04	; 4
 144:	80 81       	ld	r24, Z
 146:	87 7f       	andi	r24, 0xF7	; 247
 148:	80 83       	st	Z, r24
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
 14a:	85 b1       	in	r24, 0x05	; 5
 14c:	8b 7f       	andi	r24, 0xFB	; 251
 14e:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
 150:	84 b1       	in	r24, 0x04	; 4
 152:	84 60       	ori	r24, 0x04	; 4
 154:	84 b9       	out	0x04, r24	; 4
	    // <true"> High
	    false);

	PB2_set_dir(PORT_DIR_OUT);

	USART_0_init();
 156:	0e 94 c4 02 	call	0x588	; 0x588 <USART_0_init>
 15a:	08 95       	ret

0000015c <I2C_0_initialization>:
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
 15c:	85 b1       	in	r24, 0x05	; 5
 15e:	8e 7f       	andi	r24, 0xFE	; 254
 160:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
 162:	84 b1       	in	r24, 0x04	; 4
 164:	81 60       	ori	r24, 0x01	; 1
 166:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
 168:	e0 e3       	ldi	r30, 0x30	; 48
 16a:	f4 e0       	ldi	r31, 0x04	; 4
 16c:	80 81       	ld	r24, Z
 16e:	87 7f       	andi	r24, 0xF7	; 247
 170:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (inverted) {
		*port_pin_ctrl |= PORT_INVEN_bm;
	} else {
		*port_pin_ctrl &= ~PORT_INVEN_bm;
 172:	80 81       	ld	r24, Z
 174:	8f 77       	andi	r24, 0x7F	; 127
 176:	80 83       	st	Z, r24
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
 178:	80 81       	ld	r24, Z
 17a:	88 7f       	andi	r24, 0xF8	; 248
 17c:	80 83       	st	Z, r24
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
 17e:	85 b1       	in	r24, 0x05	; 5
 180:	8d 7f       	andi	r24, 0xFD	; 253
 182:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
 184:	84 b1       	in	r24, 0x04	; 4
 186:	82 60       	ori	r24, 0x02	; 2
 188:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
 18a:	e1 e3       	ldi	r30, 0x31	; 49
 18c:	f4 e0       	ldi	r31, 0x04	; 4
 18e:	80 81       	ld	r24, Z
 190:	87 7f       	andi	r24, 0xF7	; 247
 192:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (inverted) {
		*port_pin_ctrl |= PORT_INVEN_bm;
	} else {
		*port_pin_ctrl &= ~PORT_INVEN_bm;
 194:	80 81       	ld	r24, Z
 196:	8f 77       	andi	r24, 0x7F	; 127
 198:	80 83       	st	Z, r24
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
 19a:	80 81       	ld	r24, Z
 19c:	88 7f       	andi	r24, 0xF8	; 248
 19e:	80 83       	st	Z, r24
	    // <PORT_ISC_FALLING_gc"> Sense Falling Edge
	    // <PORT_ISC_INPUT_DISABLE_gc"> Digital Input Buffer disabled
	    // <PORT_ISC_LEVEL_gc"> Sense low Level
	    PORT_ISC_INTDISABLE_gc);

	I2C_0_init();
 1a0:	0e 94 97 02 	call	0x52e	; 0x52e <I2C_0_init>
 1a4:	08 95       	ret

000001a6 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
 1a6:	0e 94 78 00 	call	0xf0	; 0xf0 <mcu_init>

	CLKCTRL_init();
 1aa:	0e 94 74 00 	call	0xe8	; 0xe8 <CLKCTRL_init>

	USART_0_initialization();
 1ae:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_0_initialization>

	CPUINT_init();
 1b2:	0e 94 76 00 	call	0xec	; 0xec <CPUINT_init>

	SLPCTRL_init();
 1b6:	0e 94 c2 02 	call	0x584	; 0x584 <SLPCTRL_init>

	I2C_0_initialization();
 1ba:	0e 94 ae 00 	call	0x15c	; 0x15c <I2C_0_initialization>

	BOD_init();
 1be:	0e 94 72 00 	call	0xe4	; 0xe4 <BOD_init>
 1c2:	08 95       	ret

000001c4 <I2C_0_do_I2C_RESET>:
 * \brief Identical to I2C_0_master_operation(false);
 */
i2c_error_t I2C_0_master_write(void)
{
	return I2C_0_master_operation(false);
}
 1c4:	e0 ea       	ldi	r30, 0xA0	; 160
 1c6:	f8 e0       	ldi	r31, 0x08	; 8
 1c8:	84 81       	ldd	r24, Z+4	; 0x04
 1ca:	88 60       	ori	r24, 0x08	; 8
 1cc:	84 83       	std	Z+4, r24	; 0x04
 1ce:	85 81       	ldd	r24, Z+5	; 0x05
 1d0:	81 60       	ori	r24, 0x01	; 1
 1d2:	85 83       	std	Z+5, r24	; 0x05
 1d4:	e2 e3       	ldi	r30, 0x32	; 50
 1d6:	f4 e3       	ldi	r31, 0x34	; 52
 1d8:	80 81       	ld	r24, Z
 1da:	8e 7f       	andi	r24, 0xFE	; 254
 1dc:	80 83       	st	Z, r24
 1de:	13 86       	std	Z+11, r1	; 0x0b
 1e0:	8e e0       	ldi	r24, 0x0E	; 14
 1e2:	08 95       	ret

000001e4 <I2C_0_do_I2C_IDLE>:
 1e4:	e2 e3       	ldi	r30, 0x32	; 50
 1e6:	f4 e3       	ldi	r31, 0x34	; 52
 1e8:	80 81       	ld	r24, Z
 1ea:	8e 7f       	andi	r24, 0xFE	; 254
 1ec:	80 83       	st	Z, r24
 1ee:	13 86       	std	Z+11, r1	; 0x0b
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	08 95       	ret

000001f4 <I2C_0_do_I2C_SEND_STOP>:
 1f4:	e0 ea       	ldi	r30, 0xA0	; 160
 1f6:	f8 e0       	ldi	r31, 0x08	; 8
 1f8:	84 81       	ldd	r24, Z+4	; 0x04
 1fa:	83 60       	ori	r24, 0x03	; 3
 1fc:	84 83       	std	Z+4, r24	; 0x04
 1fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <I2C_0_do_I2C_IDLE>
 202:	08 95       	ret

00000204 <I2C_0_do_I2C_SEND_ADR_READ>:
 204:	e2 e3       	ldi	r30, 0x32	; 50
 206:	f4 e3       	ldi	r31, 0x34	; 52
 208:	80 81       	ld	r24, Z
 20a:	88 60       	ori	r24, 0x08	; 8
 20c:	80 83       	st	Z, r24
 20e:	81 81       	ldd	r24, Z+1	; 0x01
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	81 60       	ori	r24, 0x01	; 1
 218:	80 93 a7 08 	sts	0x08A7, r24	; 0x8008a7 <__RODATA_PM_OFFSET__+0x7f88a7>
 21c:	84 e0       	ldi	r24, 0x04	; 4
 21e:	08 95       	ret

00000220 <I2C_0_do_I2C_SEND_RESTART>:
 220:	0e 94 02 01 	call	0x204	; 0x204 <I2C_0_do_I2C_SEND_ADR_READ>
 224:	08 95       	ret

00000226 <I2C_0_do_I2C_SEND_RESTART_READ>:
 226:	0e 94 02 01 	call	0x204	; 0x204 <I2C_0_do_I2C_SEND_ADR_READ>
 22a:	08 95       	ret

0000022c <I2C_0_do_I2C_SEND_ADR_WRITE>:
 22c:	e2 e3       	ldi	r30, 0x32	; 50
 22e:	f4 e3       	ldi	r31, 0x34	; 52
 230:	80 81       	ld	r24, Z
 232:	88 60       	ori	r24, 0x08	; 8
 234:	80 83       	st	Z, r24
 236:	81 81       	ldd	r24, Z+1	; 0x01
 238:	88 0f       	add	r24, r24
 23a:	80 93 a7 08 	sts	0x08A7, r24	; 0x8008a7 <__RODATA_PM_OFFSET__+0x7f88a7>
 23e:	83 e0       	ldi	r24, 0x03	; 3
 240:	08 95       	ret

00000242 <I2C_0_do_I2C_SEND_RESTART_WRITE>:
 242:	0e 94 16 01 	call	0x22c	; 0x22c <I2C_0_do_I2C_SEND_ADR_WRITE>
 246:	08 95       	ret

00000248 <I2C_0_do_I2C_DO_ADDRESS_NACK>:
 248:	a2 e3       	ldi	r26, 0x32	; 50
 24a:	b4 e3       	ldi	r27, 0x34	; 52
 24c:	8c 91       	ld	r24, X
 24e:	87 7f       	andi	r24, 0xF7	; 247
 250:	8c 93       	st	X, r24
 252:	82 e0       	ldi	r24, 0x02	; 2
 254:	1b 96       	adiw	r26, 0x0b	; 11
 256:	8c 93       	st	X, r24
 258:	1b 97       	sbiw	r26, 0x0b	; 11
 25a:	50 96       	adiw	r26, 0x10	; 16
 25c:	ed 91       	ld	r30, X+
 25e:	fc 91       	ld	r31, X
 260:	51 97       	sbiw	r26, 0x11	; 17
 262:	5c 96       	adiw	r26, 0x1c	; 28
 264:	8d 91       	ld	r24, X+
 266:	9c 91       	ld	r25, X
 268:	5d 97       	sbiw	r26, 0x1d	; 29
 26a:	09 95       	icall
 26c:	82 30       	cpi	r24, 0x02	; 2
 26e:	19 f0       	breq	.+6      	; 0x276 <I2C_0_do_I2C_DO_ADDRESS_NACK+0x2e>
 270:	83 30       	cpi	r24, 0x03	; 3
 272:	21 f0       	breq	.+8      	; 0x27c <I2C_0_do_I2C_DO_ADDRESS_NACK+0x34>
 274:	06 c0       	rjmp	.+12     	; 0x282 <I2C_0_do_I2C_DO_ADDRESS_NACK+0x3a>
 276:	0e 94 13 01 	call	0x226	; 0x226 <I2C_0_do_I2C_SEND_RESTART_READ>
 27a:	08 95       	ret
 27c:	0e 94 21 01 	call	0x242	; 0x242 <I2C_0_do_I2C_SEND_RESTART_WRITE>
 280:	08 95       	ret
 282:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <I2C_0_do_I2C_SEND_STOP>
 286:	08 95       	ret

00000288 <I2C_0_do_I2C_RX_DO_ACK>:
 288:	e0 ea       	ldi	r30, 0xA0	; 160
 28a:	f8 e0       	ldi	r31, 0x08	; 8
 28c:	84 81       	ldd	r24, Z+4	; 0x04
 28e:	8b 7f       	andi	r24, 0xFB	; 251
 290:	84 83       	std	Z+4, r24	; 0x04
 292:	84 e0       	ldi	r24, 0x04	; 4
 294:	08 95       	ret

00000296 <I2C_0_do_I2C_TX_DO_ACK>:
 296:	e0 ea       	ldi	r30, 0xA0	; 160
 298:	f8 e0       	ldi	r31, 0x08	; 8
 29a:	84 81       	ldd	r24, Z+4	; 0x04
 29c:	8b 7f       	andi	r24, 0xFB	; 251
 29e:	84 83       	std	Z+4, r24	; 0x04
 2a0:	83 e0       	ldi	r24, 0x03	; 3
 2a2:	08 95       	ret

000002a4 <I2C_0_do_I2C_DO_NACK_STOP>:
 2a4:	e0 ea       	ldi	r30, 0xA0	; 160
 2a6:	f8 e0       	ldi	r31, 0x08	; 8
 2a8:	84 81       	ldd	r24, Z+4	; 0x04
 2aa:	84 60       	ori	r24, 0x04	; 4
 2ac:	84 83       	std	Z+4, r24	; 0x04
 2ae:	84 81       	ldd	r24, Z+4	; 0x04
 2b0:	83 60       	ori	r24, 0x03	; 3
 2b2:	84 83       	std	Z+4, r24	; 0x04
 2b4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <I2C_0_do_I2C_IDLE>
 2b8:	08 95       	ret

000002ba <I2C_0_do_I2C_DO_NACK_RESTART>:
 2ba:	e0 ea       	ldi	r30, 0xA0	; 160
 2bc:	f8 e0       	ldi	r31, 0x08	; 8
 2be:	84 81       	ldd	r24, Z+4	; 0x04
 2c0:	84 60       	ori	r24, 0x04	; 4
 2c2:	84 83       	std	Z+4, r24	; 0x04
 2c4:	88 e0       	ldi	r24, 0x08	; 8
 2c6:	08 95       	ret

000002c8 <I2C_0_do_I2C_TX>:
 2c8:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
 2cc:	84 ff       	sbrs	r24, 4
 2ce:	19 c0       	rjmp	.+50     	; 0x302 <I2C_0_do_I2C_TX+0x3a>
 2d0:	a2 e3       	ldi	r26, 0x32	; 50
 2d2:	b4 e3       	ldi	r27, 0x34	; 52
 2d4:	52 96       	adiw	r26, 0x12	; 18
 2d6:	ed 91       	ld	r30, X+
 2d8:	fc 91       	ld	r31, X
 2da:	53 97       	sbiw	r26, 0x13	; 19
 2dc:	5e 96       	adiw	r26, 0x1e	; 30
 2de:	8d 91       	ld	r24, X+
 2e0:	9c 91       	ld	r25, X
 2e2:	5f 97       	sbiw	r26, 0x1f	; 31
 2e4:	09 95       	icall
 2e6:	82 30       	cpi	r24, 0x02	; 2
 2e8:	19 f0       	breq	.+6      	; 0x2f0 <I2C_0_do_I2C_TX+0x28>
 2ea:	83 30       	cpi	r24, 0x03	; 3
 2ec:	21 f0       	breq	.+8      	; 0x2f6 <I2C_0_do_I2C_TX+0x2e>
 2ee:	06 c0       	rjmp	.+12     	; 0x2fc <I2C_0_do_I2C_TX+0x34>
 2f0:	0e 94 13 01 	call	0x226	; 0x226 <I2C_0_do_I2C_SEND_RESTART_READ>
 2f4:	08 95       	ret
 2f6:	0e 94 21 01 	call	0x242	; 0x242 <I2C_0_do_I2C_SEND_RESTART_WRITE>
 2fa:	08 95       	ret
 2fc:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <I2C_0_do_I2C_SEND_STOP>
 300:	08 95       	ret
 302:	e2 e3       	ldi	r30, 0x32	; 50
 304:	f4 e3       	ldi	r31, 0x34	; 52
 306:	80 81       	ld	r24, Z
 308:	87 7f       	andi	r24, 0xF7	; 247
 30a:	80 83       	st	Z, r24
 30c:	a2 81       	ldd	r26, Z+2	; 0x02
 30e:	b3 81       	ldd	r27, Z+3	; 0x03
 310:	cd 01       	movw	r24, r26
 312:	01 96       	adiw	r24, 0x01	; 1
 314:	82 83       	std	Z+2, r24	; 0x02
 316:	93 83       	std	Z+3, r25	; 0x03
 318:	8c 91       	ld	r24, X
 31a:	80 93 a8 08 	sts	0x08A8, r24	; 0x8008a8 <__RODATA_PM_OFFSET__+0x7f88a8>
 31e:	84 81       	ldd	r24, Z+4	; 0x04
 320:	95 81       	ldd	r25, Z+5	; 0x05
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	84 83       	std	Z+4, r24	; 0x04
 326:	95 83       	std	Z+5, r25	; 0x05
 328:	89 2b       	or	r24, r25
 32a:	11 f0       	breq	.+4      	; 0x330 <I2C_0_do_I2C_TX+0x68>
 32c:	83 e0       	ldi	r24, 0x03	; 3
 32e:	08 95       	ret
 330:	85 e0       	ldi	r24, 0x05	; 5
 332:	08 95       	ret

00000334 <I2C_0_do_I2C_RX>:
 334:	cf 93       	push	r28
 336:	df 93       	push	r29
 338:	e2 e3       	ldi	r30, 0x32	; 50
 33a:	f4 e3       	ldi	r31, 0x34	; 52
 33c:	80 81       	ld	r24, Z
 33e:	87 7f       	andi	r24, 0xF7	; 247
 340:	80 83       	st	Z, r24
 342:	84 81       	ldd	r24, Z+4	; 0x04
 344:	95 81       	ldd	r25, Z+5	; 0x05
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	31 f4       	brne	.+12     	; 0x356 <I2C_0_do_I2C_RX+0x22>
 34a:	e0 ea       	ldi	r30, 0xA0	; 160
 34c:	f8 e0       	ldi	r31, 0x08	; 8
 34e:	84 81       	ldd	r24, Z+4	; 0x04
 350:	84 60       	ori	r24, 0x04	; 4
 352:	84 83       	std	Z+4, r24	; 0x04
 354:	05 c0       	rjmp	.+10     	; 0x360 <I2C_0_do_I2C_RX+0x2c>
 356:	e0 ea       	ldi	r30, 0xA0	; 160
 358:	f8 e0       	ldi	r31, 0x08	; 8
 35a:	84 81       	ldd	r24, Z+4	; 0x04
 35c:	8b 7f       	andi	r24, 0xFB	; 251
 35e:	84 83       	std	Z+4, r24	; 0x04
 360:	e2 e3       	ldi	r30, 0x32	; 50
 362:	f4 e3       	ldi	r31, 0x34	; 52
 364:	84 81       	ldd	r24, Z+4	; 0x04
 366:	95 81       	ldd	r25, Z+5	; 0x05
 368:	01 97       	sbiw	r24, 0x01	; 1
 36a:	84 83       	std	Z+4, r24	; 0x04
 36c:	95 83       	std	Z+5, r25	; 0x05
 36e:	89 2b       	or	r24, r25
 370:	a9 f0       	breq	.+42     	; 0x39c <I2C_0_do_I2C_RX+0x68>
 372:	df 01       	movw	r26, r30
 374:	c2 81       	ldd	r28, Z+2	; 0x02
 376:	d3 81       	ldd	r29, Z+3	; 0x03
 378:	e0 ea       	ldi	r30, 0xA0	; 160
 37a:	f8 e0       	ldi	r31, 0x08	; 8
 37c:	80 85       	ldd	r24, Z+8	; 0x08
 37e:	88 83       	st	Y, r24
 380:	12 96       	adiw	r26, 0x02	; 2
 382:	8d 91       	ld	r24, X+
 384:	9c 91       	ld	r25, X
 386:	13 97       	sbiw	r26, 0x03	; 3
 388:	01 96       	adiw	r24, 0x01	; 1
 38a:	12 96       	adiw	r26, 0x02	; 2
 38c:	8d 93       	st	X+, r24
 38e:	9c 93       	st	X, r25
 390:	13 97       	sbiw	r26, 0x03	; 3
 392:	84 81       	ldd	r24, Z+4	; 0x04
 394:	82 60       	ori	r24, 0x02	; 2
 396:	84 83       	std	Z+4, r24	; 0x04
 398:	84 e0       	ldi	r24, 0x04	; 4
 39a:	26 c0       	rjmp	.+76     	; 0x3e8 <I2C_0_do_I2C_RX+0xb4>
 39c:	a2 e3       	ldi	r26, 0x32	; 50
 39e:	b4 e3       	ldi	r27, 0x34	; 52
 3a0:	12 96       	adiw	r26, 0x02	; 2
 3a2:	ed 91       	ld	r30, X+
 3a4:	fc 91       	ld	r31, X
 3a6:	13 97       	sbiw	r26, 0x03	; 3
 3a8:	80 91 a8 08 	lds	r24, 0x08A8	; 0x8008a8 <__RODATA_PM_OFFSET__+0x7f88a8>
 3ac:	80 83       	st	Z, r24
 3ae:	12 96       	adiw	r26, 0x02	; 2
 3b0:	8d 91       	ld	r24, X+
 3b2:	9c 91       	ld	r25, X
 3b4:	13 97       	sbiw	r26, 0x03	; 3
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	12 96       	adiw	r26, 0x02	; 2
 3ba:	8d 93       	st	X+, r24
 3bc:	9c 93       	st	X, r25
 3be:	13 97       	sbiw	r26, 0x03	; 3
 3c0:	8c 91       	ld	r24, X
 3c2:	84 60       	ori	r24, 0x04	; 4
 3c4:	8c 93       	st	X, r24
 3c6:	1c 96       	adiw	r26, 0x0c	; 12
 3c8:	ed 91       	ld	r30, X+
 3ca:	fc 91       	ld	r31, X
 3cc:	1d 97       	sbiw	r26, 0x0d	; 13
 3ce:	58 96       	adiw	r26, 0x18	; 24
 3d0:	8d 91       	ld	r24, X+
 3d2:	9c 91       	ld	r25, X
 3d4:	59 97       	sbiw	r26, 0x19	; 25
 3d6:	09 95       	icall
 3d8:	82 50       	subi	r24, 0x02	; 2
 3da:	82 30       	cpi	r24, 0x02	; 2
 3dc:	18 f4       	brcc	.+6      	; 0x3e4 <I2C_0_do_I2C_RX+0xb0>
 3de:	0e 94 5d 01 	call	0x2ba	; 0x2ba <I2C_0_do_I2C_DO_NACK_RESTART>
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <I2C_0_do_I2C_RX+0xb4>
 3e4:	0e 94 52 01 	call	0x2a4	; 0x2a4 <I2C_0_do_I2C_DO_NACK_STOP>
 3e8:	df 91       	pop	r29
 3ea:	cf 91       	pop	r28
 3ec:	08 95       	ret

000003ee <I2C_0_do_I2C_TX_EMPTY>:
 3ee:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
 3f2:	84 ff       	sbrs	r24, 4
 3f4:	19 c0       	rjmp	.+50     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3f6:	a2 e3       	ldi	r26, 0x32	; 50
 3f8:	b4 e3       	ldi	r27, 0x34	; 52
 3fa:	52 96       	adiw	r26, 0x12	; 18
 3fc:	ed 91       	ld	r30, X+
 3fe:	fc 91       	ld	r31, X
 400:	53 97       	sbiw	r26, 0x13	; 19
 402:	5e 96       	adiw	r26, 0x1e	; 30
 404:	8d 91       	ld	r24, X+
 406:	9c 91       	ld	r25, X
 408:	5f 97       	sbiw	r26, 0x1f	; 31
 40a:	09 95       	icall
 40c:	82 30       	cpi	r24, 0x02	; 2
 40e:	19 f0       	breq	.+6      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 410:	83 30       	cpi	r24, 0x03	; 3
 412:	21 f0       	breq	.+8      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 414:	06 c0       	rjmp	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	0e 94 13 01 	call	0x226	; 0x226 <I2C_0_do_I2C_SEND_RESTART_READ>
 41a:	08 95       	ret
 41c:	0e 94 21 01 	call	0x242	; 0x242 <I2C_0_do_I2C_SEND_RESTART_WRITE>
 420:	08 95       	ret
 422:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <I2C_0_do_I2C_SEND_STOP>
 426:	08 95       	ret
 428:	a2 e3       	ldi	r26, 0x32	; 50
 42a:	b4 e3       	ldi	r27, 0x34	; 52
 42c:	8c 91       	ld	r24, X
 42e:	84 60       	ori	r24, 0x04	; 4
 430:	8c 93       	st	X, r24
 432:	1c 96       	adiw	r26, 0x0c	; 12
 434:	ed 91       	ld	r30, X+
 436:	fc 91       	ld	r31, X
 438:	1d 97       	sbiw	r26, 0x0d	; 13
 43a:	58 96       	adiw	r26, 0x18	; 24
 43c:	8d 91       	ld	r24, X+
 43e:	9c 91       	ld	r25, X
 440:	59 97       	sbiw	r26, 0x19	; 25
 442:	09 95       	icall
 444:	83 30       	cpi	r24, 0x03	; 3
 446:	39 f0       	breq	.+14     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 448:	84 30       	cpi	r24, 0x04	; 4
 44a:	41 f0       	breq	.+16     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 44c:	82 30       	cpi	r24, 0x02	; 2
 44e:	49 f4       	brne	.+18     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 450:	0e 94 13 01 	call	0x226	; 0x226 <I2C_0_do_I2C_SEND_RESTART_READ>
 454:	08 95       	ret
 456:	0e 94 21 01 	call	0x242	; 0x242 <I2C_0_do_I2C_SEND_RESTART_WRITE>
 45a:	08 95       	ret
 45c:	0e 94 64 01 	call	0x2c8	; 0x2c8 <I2C_0_do_I2C_TX>
 460:	08 95       	ret
 462:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <I2C_0_do_I2C_SEND_STOP>
 466:	08 95       	ret

00000468 <I2C_0_do_I2C_BUS_COLLISION>:
 468:	e0 ea       	ldi	r30, 0xA0	; 160
 46a:	f8 e0       	ldi	r31, 0x08	; 8
 46c:	85 81       	ldd	r24, Z+5	; 0x05
 46e:	88 60       	ori	r24, 0x08	; 8
 470:	85 83       	std	Z+5, r24	; 0x05
 472:	a2 e3       	ldi	r26, 0x32	; 50
 474:	b4 e3       	ldi	r27, 0x34	; 52
 476:	82 e0       	ldi	r24, 0x02	; 2
 478:	1b 96       	adiw	r26, 0x0b	; 11
 47a:	8c 93       	st	X, r24
 47c:	1b 97       	sbiw	r26, 0x0b	; 11
 47e:	1e 96       	adiw	r26, 0x0e	; 14
 480:	ed 91       	ld	r30, X+
 482:	fc 91       	ld	r31, X
 484:	1f 97       	sbiw	r26, 0x0f	; 15
 486:	5a 96       	adiw	r26, 0x1a	; 26
 488:	8d 91       	ld	r24, X+
 48a:	9c 91       	ld	r25, X
 48c:	5b 97       	sbiw	r26, 0x1b	; 27
 48e:	09 95       	icall
 490:	82 30       	cpi	r24, 0x02	; 2
 492:	19 f0       	breq	.+6      	; 0x49a <I2C_0_do_I2C_BUS_COLLISION+0x32>
 494:	83 30       	cpi	r24, 0x03	; 3
 496:	21 f0       	breq	.+8      	; 0x4a0 <I2C_0_do_I2C_BUS_COLLISION+0x38>
 498:	06 c0       	rjmp	.+12     	; 0x4a6 <I2C_0_do_I2C_BUS_COLLISION+0x3e>
 49a:	0e 94 13 01 	call	0x226	; 0x226 <I2C_0_do_I2C_SEND_RESTART_READ>
 49e:	08 95       	ret
 4a0:	0e 94 21 01 	call	0x242	; 0x242 <I2C_0_do_I2C_SEND_RESTART_WRITE>
 4a4:	08 95       	ret
 4a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <I2C_0_do_I2C_RESET>
 4aa:	08 95       	ret

000004ac <I2C_0_do_I2C_BUS_ERROR>:
 4ac:	e0 ea       	ldi	r30, 0xA0	; 160
 4ae:	f8 e0       	ldi	r31, 0x08	; 8
 4b0:	84 81       	ldd	r24, Z+4	; 0x04
 4b2:	88 60       	ori	r24, 0x08	; 8
 4b4:	84 83       	std	Z+4, r24	; 0x04
 4b6:	85 81       	ldd	r24, Z+5	; 0x05
 4b8:	81 60       	ori	r24, 0x01	; 1
 4ba:	85 83       	std	Z+5, r24	; 0x05
 4bc:	e2 e3       	ldi	r30, 0x32	; 50
 4be:	f4 e3       	ldi	r31, 0x34	; 52
 4c0:	80 81       	ld	r24, Z
 4c2:	8e 7f       	andi	r24, 0xFE	; 254
 4c4:	80 83       	st	Z, r24
 4c6:	82 e0       	ldi	r24, 0x02	; 2
 4c8:	83 87       	std	Z+11, r24	; 0x0b
 4ca:	8e e0       	ldi	r24, 0x0E	; 14
 4cc:	08 95       	ret

000004ce <I2C_0_master_isr>:
 4ce:	cf 93       	push	r28
 4d0:	df 93       	push	r29
 4d2:	e0 ea       	ldi	r30, 0xA0	; 160
 4d4:	f8 e0       	ldi	r31, 0x08	; 8
 4d6:	85 81       	ldd	r24, Z+5	; 0x05
 4d8:	80 6c       	ori	r24, 0xC0	; 192
 4da:	85 83       	std	Z+5, r24	; 0x05
 4dc:	80 91 32 34 	lds	r24, 0x3432	; 0x803432 <__data_end>
 4e0:	83 ff       	sbrs	r24, 3
 4e2:	07 c0       	rjmp	.+14     	; 0x4f2 <I2C_0_master_isr+0x24>
 4e4:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
 4e8:	84 ff       	sbrs	r24, 4
 4ea:	03 c0       	rjmp	.+6      	; 0x4f2 <I2C_0_master_isr+0x24>
 4ec:	8f e0       	ldi	r24, 0x0F	; 15
 4ee:	80 93 3c 34 	sts	0x343C, r24	; 0x80343c <__data_end+0xa>
 4f2:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
 4f6:	83 ff       	sbrs	r24, 3
 4f8:	03 c0       	rjmp	.+6      	; 0x500 <I2C_0_master_isr+0x32>
 4fa:	80 e1       	ldi	r24, 0x10	; 16
 4fc:	80 93 3c 34 	sts	0x343C, r24	; 0x80343c <__data_end+0xa>
 500:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
 504:	82 ff       	sbrs	r24, 2
 506:	03 c0       	rjmp	.+6      	; 0x50e <I2C_0_master_isr+0x40>
 508:	81 e1       	ldi	r24, 0x11	; 17
 50a:	80 93 3c 34 	sts	0x343C, r24	; 0x80343c <__data_end+0xa>
 50e:	c2 e3       	ldi	r28, 0x32	; 50
 510:	d4 e3       	ldi	r29, 0x34	; 52
 512:	ea 85       	ldd	r30, Y+10	; 0x0a
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	ee 0f       	add	r30, r30
 518:	ff 1f       	adc	r31, r31
 51a:	e0 50       	subi	r30, 0x00	; 0
 51c:	fc 4c       	sbci	r31, 0xCC	; 204
 51e:	01 90       	ld	r0, Z+
 520:	f0 81       	ld	r31, Z
 522:	e0 2d       	mov	r30, r0
 524:	09 95       	icall
 526:	8a 87       	std	Y+10, r24	; 0x0a
 528:	df 91       	pop	r29
 52a:	cf 91       	pop	r28
 52c:	08 95       	ret

0000052e <I2C_0_init>:
 52e:	e0 ea       	ldi	r30, 0xA0	; 160
 530:	f8 e0       	ldi	r31, 0x08	; 8
 532:	8b e0       	ldi	r24, 0x0B	; 11
 534:	86 83       	std	Z+6, r24	; 0x06
 536:	81 ec       	ldi	r24, 0xC1	; 193
 538:	83 83       	std	Z+3, r24	; 0x03
 53a:	08 95       	ret

0000053c <__vector_15>:
    I2C_0_do_I2C_BUS_COLLISION,      // I2C_BUS_COLLISION
    I2C_0_do_I2C_BUS_ERROR           // I2C_BUS_ERROR
};

ISR(TWI0_TWIM_vect)
{
 53c:	1f 92       	push	r1
 53e:	0f 92       	push	r0
 540:	0f b6       	in	r0, 0x3f	; 63
 542:	0f 92       	push	r0
 544:	11 24       	eor	r1, r1
 546:	2f 93       	push	r18
 548:	3f 93       	push	r19
 54a:	4f 93       	push	r20
 54c:	5f 93       	push	r21
 54e:	6f 93       	push	r22
 550:	7f 93       	push	r23
 552:	8f 93       	push	r24
 554:	9f 93       	push	r25
 556:	af 93       	push	r26
 558:	bf 93       	push	r27
 55a:	ef 93       	push	r30
 55c:	ff 93       	push	r31
	I2C_0_master_isr();
 55e:	0e 94 67 02 	call	0x4ce	; 0x4ce <I2C_0_master_isr>
}
 562:	ff 91       	pop	r31
 564:	ef 91       	pop	r30
 566:	bf 91       	pop	r27
 568:	af 91       	pop	r26
 56a:	9f 91       	pop	r25
 56c:	8f 91       	pop	r24
 56e:	7f 91       	pop	r23
 570:	6f 91       	pop	r22
 572:	5f 91       	pop	r21
 574:	4f 91       	pop	r20
 576:	3f 91       	pop	r19
 578:	2f 91       	pop	r18
 57a:	0f 90       	pop	r0
 57c:	0f be       	out	0x3f, r0	; 63
 57e:	0f 90       	pop	r0
 580:	1f 90       	pop	r1
 582:	18 95       	reti

00000584 <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
 584:	80 e0       	ldi	r24, 0x00	; 0
 586:	08 95       	ret

00000588 <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(USART0.STATUS & USART_RXCIF_bm))
		;
	return USART0.RXDATAL;
}
 588:	e0 e0       	ldi	r30, 0x00	; 0
 58a:	f8 e0       	ldi	r31, 0x08	; 8
 58c:	8d e6       	ldi	r24, 0x6D	; 109
 58e:	95 e0       	ldi	r25, 0x05	; 5
 590:	80 87       	std	Z+8, r24	; 0x08
 592:	91 87       	std	Z+9, r25	; 0x09
 594:	80 ec       	ldi	r24, 0xC0	; 192
 596:	86 83       	std	Z+6, r24	; 0x06
 598:	84 e2       	ldi	r24, 0x24	; 36
 59a:	94 e3       	ldi	r25, 0x34	; 52
 59c:	80 93 58 34 	sts	0x3458, r24	; 0x803458 <__iob+0x2>
 5a0:	90 93 59 34 	sts	0x3459, r25	; 0x803459 <__iob+0x3>
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	08 95       	ret

000005a8 <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(USART0.STATUS & USART_DREIF_bm))
 5a8:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 5ac:	95 ff       	sbrs	r25, 5
 5ae:	fc cf       	rjmp	.-8      	; 0x5a8 <USART_0_write>
		;
	USART0.TXDATAL = data;
 5b0:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
 5b4:	08 95       	ret

000005b6 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
 5b6:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <USART_0_write>
	return 0;
}
 5ba:	80 e0       	ldi	r24, 0x00	; 0
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	08 95       	ret

000005c0 <printf>:
 5c0:	a0 e0       	ldi	r26, 0x00	; 0
 5c2:	b0 e0       	ldi	r27, 0x00	; 0
 5c4:	e6 ee       	ldi	r30, 0xE6	; 230
 5c6:	f2 e0       	ldi	r31, 0x02	; 2
 5c8:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <__prologue_saves__+0x20>
 5cc:	ae 01       	movw	r20, r28
 5ce:	4b 5f       	subi	r20, 0xFB	; 251
 5d0:	5f 4f       	sbci	r21, 0xFF	; 255
 5d2:	fa 01       	movw	r30, r20
 5d4:	61 91       	ld	r22, Z+
 5d6:	71 91       	ld	r23, Z+
 5d8:	af 01       	movw	r20, r30
 5da:	80 91 58 34 	lds	r24, 0x3458	; 0x803458 <__iob+0x2>
 5de:	90 91 59 34 	lds	r25, 0x3459	; 0x803459 <__iob+0x3>
 5e2:	0e 94 f6 02 	call	0x5ec	; 0x5ec <vfprintf>
 5e6:	e2 e0       	ldi	r30, 0x02	; 2
 5e8:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__epilogue_restores__+0x20>

000005ec <vfprintf>:
 5ec:	ab e0       	ldi	r26, 0x0B	; 11
 5ee:	b0 e0       	ldi	r27, 0x00	; 0
 5f0:	ec ef       	ldi	r30, 0xFC	; 252
 5f2:	f2 e0       	ldi	r31, 0x02	; 2
 5f4:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__prologue_saves__>
 5f8:	6c 01       	movw	r12, r24
 5fa:	7b 01       	movw	r14, r22
 5fc:	8a 01       	movw	r16, r20
 5fe:	fc 01       	movw	r30, r24
 600:	16 82       	std	Z+6, r1	; 0x06
 602:	17 82       	std	Z+7, r1	; 0x07
 604:	83 81       	ldd	r24, Z+3	; 0x03
 606:	81 ff       	sbrs	r24, 1
 608:	cc c1       	rjmp	.+920    	; 0x9a2 <vfprintf+0x3b6>
 60a:	ce 01       	movw	r24, r28
 60c:	01 96       	adiw	r24, 0x01	; 1
 60e:	3c 01       	movw	r6, r24
 610:	f6 01       	movw	r30, r12
 612:	93 81       	ldd	r25, Z+3	; 0x03
 614:	f7 01       	movw	r30, r14
 616:	93 fd       	sbrc	r25, 3
 618:	85 91       	lpm	r24, Z+
 61a:	93 ff       	sbrs	r25, 3
 61c:	81 91       	ld	r24, Z+
 61e:	7f 01       	movw	r14, r30
 620:	88 23       	and	r24, r24
 622:	09 f4       	brne	.+2      	; 0x626 <vfprintf+0x3a>
 624:	ba c1       	rjmp	.+884    	; 0x99a <vfprintf+0x3ae>
 626:	85 32       	cpi	r24, 0x25	; 37
 628:	39 f4       	brne	.+14     	; 0x638 <vfprintf+0x4c>
 62a:	93 fd       	sbrc	r25, 3
 62c:	85 91       	lpm	r24, Z+
 62e:	93 ff       	sbrs	r25, 3
 630:	81 91       	ld	r24, Z+
 632:	7f 01       	movw	r14, r30
 634:	85 32       	cpi	r24, 0x25	; 37
 636:	29 f4       	brne	.+10     	; 0x642 <vfprintf+0x56>
 638:	b6 01       	movw	r22, r12
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 640:	e7 cf       	rjmp	.-50     	; 0x610 <vfprintf+0x24>
 642:	91 2c       	mov	r9, r1
 644:	21 2c       	mov	r2, r1
 646:	31 2c       	mov	r3, r1
 648:	ff e1       	ldi	r31, 0x1F	; 31
 64a:	f3 15       	cp	r31, r3
 64c:	d8 f0       	brcs	.+54     	; 0x684 <vfprintf+0x98>
 64e:	8b 32       	cpi	r24, 0x2B	; 43
 650:	79 f0       	breq	.+30     	; 0x670 <vfprintf+0x84>
 652:	38 f4       	brcc	.+14     	; 0x662 <vfprintf+0x76>
 654:	80 32       	cpi	r24, 0x20	; 32
 656:	79 f0       	breq	.+30     	; 0x676 <vfprintf+0x8a>
 658:	83 32       	cpi	r24, 0x23	; 35
 65a:	a1 f4       	brne	.+40     	; 0x684 <vfprintf+0x98>
 65c:	23 2d       	mov	r18, r3
 65e:	20 61       	ori	r18, 0x10	; 16
 660:	1d c0       	rjmp	.+58     	; 0x69c <vfprintf+0xb0>
 662:	8d 32       	cpi	r24, 0x2D	; 45
 664:	61 f0       	breq	.+24     	; 0x67e <vfprintf+0x92>
 666:	80 33       	cpi	r24, 0x30	; 48
 668:	69 f4       	brne	.+26     	; 0x684 <vfprintf+0x98>
 66a:	23 2d       	mov	r18, r3
 66c:	21 60       	ori	r18, 0x01	; 1
 66e:	16 c0       	rjmp	.+44     	; 0x69c <vfprintf+0xb0>
 670:	83 2d       	mov	r24, r3
 672:	82 60       	ori	r24, 0x02	; 2
 674:	38 2e       	mov	r3, r24
 676:	e3 2d       	mov	r30, r3
 678:	e4 60       	ori	r30, 0x04	; 4
 67a:	3e 2e       	mov	r3, r30
 67c:	2a c0       	rjmp	.+84     	; 0x6d2 <vfprintf+0xe6>
 67e:	f3 2d       	mov	r31, r3
 680:	f8 60       	ori	r31, 0x08	; 8
 682:	1d c0       	rjmp	.+58     	; 0x6be <vfprintf+0xd2>
 684:	37 fc       	sbrc	r3, 7
 686:	2d c0       	rjmp	.+90     	; 0x6e2 <vfprintf+0xf6>
 688:	20 ed       	ldi	r18, 0xD0	; 208
 68a:	28 0f       	add	r18, r24
 68c:	2a 30       	cpi	r18, 0x0A	; 10
 68e:	40 f0       	brcs	.+16     	; 0x6a0 <vfprintf+0xb4>
 690:	8e 32       	cpi	r24, 0x2E	; 46
 692:	b9 f4       	brne	.+46     	; 0x6c2 <vfprintf+0xd6>
 694:	36 fc       	sbrc	r3, 6
 696:	81 c1       	rjmp	.+770    	; 0x99a <vfprintf+0x3ae>
 698:	23 2d       	mov	r18, r3
 69a:	20 64       	ori	r18, 0x40	; 64
 69c:	32 2e       	mov	r3, r18
 69e:	19 c0       	rjmp	.+50     	; 0x6d2 <vfprintf+0xe6>
 6a0:	36 fe       	sbrs	r3, 6
 6a2:	06 c0       	rjmp	.+12     	; 0x6b0 <vfprintf+0xc4>
 6a4:	8a e0       	ldi	r24, 0x0A	; 10
 6a6:	98 9e       	mul	r9, r24
 6a8:	20 0d       	add	r18, r0
 6aa:	11 24       	eor	r1, r1
 6ac:	92 2e       	mov	r9, r18
 6ae:	11 c0       	rjmp	.+34     	; 0x6d2 <vfprintf+0xe6>
 6b0:	ea e0       	ldi	r30, 0x0A	; 10
 6b2:	2e 9e       	mul	r2, r30
 6b4:	20 0d       	add	r18, r0
 6b6:	11 24       	eor	r1, r1
 6b8:	22 2e       	mov	r2, r18
 6ba:	f3 2d       	mov	r31, r3
 6bc:	f0 62       	ori	r31, 0x20	; 32
 6be:	3f 2e       	mov	r3, r31
 6c0:	08 c0       	rjmp	.+16     	; 0x6d2 <vfprintf+0xe6>
 6c2:	8c 36       	cpi	r24, 0x6C	; 108
 6c4:	21 f4       	brne	.+8      	; 0x6ce <vfprintf+0xe2>
 6c6:	83 2d       	mov	r24, r3
 6c8:	80 68       	ori	r24, 0x80	; 128
 6ca:	38 2e       	mov	r3, r24
 6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <vfprintf+0xe6>
 6ce:	88 36       	cpi	r24, 0x68	; 104
 6d0:	41 f4       	brne	.+16     	; 0x6e2 <vfprintf+0xf6>
 6d2:	f7 01       	movw	r30, r14
 6d4:	93 fd       	sbrc	r25, 3
 6d6:	85 91       	lpm	r24, Z+
 6d8:	93 ff       	sbrs	r25, 3
 6da:	81 91       	ld	r24, Z+
 6dc:	7f 01       	movw	r14, r30
 6de:	81 11       	cpse	r24, r1
 6e0:	b3 cf       	rjmp	.-154    	; 0x648 <vfprintf+0x5c>
 6e2:	98 2f       	mov	r25, r24
 6e4:	9f 7d       	andi	r25, 0xDF	; 223
 6e6:	95 54       	subi	r25, 0x45	; 69
 6e8:	93 30       	cpi	r25, 0x03	; 3
 6ea:	28 f4       	brcc	.+10     	; 0x6f6 <vfprintf+0x10a>
 6ec:	0c 5f       	subi	r16, 0xFC	; 252
 6ee:	1f 4f       	sbci	r17, 0xFF	; 255
 6f0:	9f e3       	ldi	r25, 0x3F	; 63
 6f2:	99 83       	std	Y+1, r25	; 0x01
 6f4:	0d c0       	rjmp	.+26     	; 0x710 <vfprintf+0x124>
 6f6:	83 36       	cpi	r24, 0x63	; 99
 6f8:	31 f0       	breq	.+12     	; 0x706 <vfprintf+0x11a>
 6fa:	83 37       	cpi	r24, 0x73	; 115
 6fc:	71 f0       	breq	.+28     	; 0x71a <vfprintf+0x12e>
 6fe:	83 35       	cpi	r24, 0x53	; 83
 700:	09 f0       	breq	.+2      	; 0x704 <vfprintf+0x118>
 702:	59 c0       	rjmp	.+178    	; 0x7b6 <vfprintf+0x1ca>
 704:	21 c0       	rjmp	.+66     	; 0x748 <vfprintf+0x15c>
 706:	f8 01       	movw	r30, r16
 708:	80 81       	ld	r24, Z
 70a:	89 83       	std	Y+1, r24	; 0x01
 70c:	0e 5f       	subi	r16, 0xFE	; 254
 70e:	1f 4f       	sbci	r17, 0xFF	; 255
 710:	88 24       	eor	r8, r8
 712:	83 94       	inc	r8
 714:	91 2c       	mov	r9, r1
 716:	53 01       	movw	r10, r6
 718:	13 c0       	rjmp	.+38     	; 0x740 <vfprintf+0x154>
 71a:	28 01       	movw	r4, r16
 71c:	f2 e0       	ldi	r31, 0x02	; 2
 71e:	4f 0e       	add	r4, r31
 720:	51 1c       	adc	r5, r1
 722:	f8 01       	movw	r30, r16
 724:	a0 80       	ld	r10, Z
 726:	b1 80       	ldd	r11, Z+1	; 0x01
 728:	36 fe       	sbrs	r3, 6
 72a:	03 c0       	rjmp	.+6      	; 0x732 <vfprintf+0x146>
 72c:	69 2d       	mov	r22, r9
 72e:	70 e0       	ldi	r23, 0x00	; 0
 730:	02 c0       	rjmp	.+4      	; 0x736 <vfprintf+0x14a>
 732:	6f ef       	ldi	r22, 0xFF	; 255
 734:	7f ef       	ldi	r23, 0xFF	; 255
 736:	c5 01       	movw	r24, r10
 738:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <strnlen>
 73c:	4c 01       	movw	r8, r24
 73e:	82 01       	movw	r16, r4
 740:	f3 2d       	mov	r31, r3
 742:	ff 77       	andi	r31, 0x7F	; 127
 744:	3f 2e       	mov	r3, r31
 746:	16 c0       	rjmp	.+44     	; 0x774 <vfprintf+0x188>
 748:	28 01       	movw	r4, r16
 74a:	22 e0       	ldi	r18, 0x02	; 2
 74c:	42 0e       	add	r4, r18
 74e:	51 1c       	adc	r5, r1
 750:	f8 01       	movw	r30, r16
 752:	a0 80       	ld	r10, Z
 754:	b1 80       	ldd	r11, Z+1	; 0x01
 756:	36 fe       	sbrs	r3, 6
 758:	03 c0       	rjmp	.+6      	; 0x760 <vfprintf+0x174>
 75a:	69 2d       	mov	r22, r9
 75c:	70 e0       	ldi	r23, 0x00	; 0
 75e:	02 c0       	rjmp	.+4      	; 0x764 <vfprintf+0x178>
 760:	6f ef       	ldi	r22, 0xFF	; 255
 762:	7f ef       	ldi	r23, 0xFF	; 255
 764:	c5 01       	movw	r24, r10
 766:	0e 94 d7 04 	call	0x9ae	; 0x9ae <strnlen_P>
 76a:	4c 01       	movw	r8, r24
 76c:	f3 2d       	mov	r31, r3
 76e:	f0 68       	ori	r31, 0x80	; 128
 770:	3f 2e       	mov	r3, r31
 772:	82 01       	movw	r16, r4
 774:	33 fc       	sbrc	r3, 3
 776:	1b c0       	rjmp	.+54     	; 0x7ae <vfprintf+0x1c2>
 778:	82 2d       	mov	r24, r2
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	88 16       	cp	r8, r24
 77e:	99 06       	cpc	r9, r25
 780:	b0 f4       	brcc	.+44     	; 0x7ae <vfprintf+0x1c2>
 782:	b6 01       	movw	r22, r12
 784:	80 e2       	ldi	r24, 0x20	; 32
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 78c:	2a 94       	dec	r2
 78e:	f4 cf       	rjmp	.-24     	; 0x778 <vfprintf+0x18c>
 790:	f5 01       	movw	r30, r10
 792:	37 fc       	sbrc	r3, 7
 794:	85 91       	lpm	r24, Z+
 796:	37 fe       	sbrs	r3, 7
 798:	81 91       	ld	r24, Z+
 79a:	5f 01       	movw	r10, r30
 79c:	b6 01       	movw	r22, r12
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 7a4:	21 10       	cpse	r2, r1
 7a6:	2a 94       	dec	r2
 7a8:	21 e0       	ldi	r18, 0x01	; 1
 7aa:	82 1a       	sub	r8, r18
 7ac:	91 08       	sbc	r9, r1
 7ae:	81 14       	cp	r8, r1
 7b0:	91 04       	cpc	r9, r1
 7b2:	71 f7       	brne	.-36     	; 0x790 <vfprintf+0x1a4>
 7b4:	e8 c0       	rjmp	.+464    	; 0x986 <vfprintf+0x39a>
 7b6:	84 36       	cpi	r24, 0x64	; 100
 7b8:	11 f0       	breq	.+4      	; 0x7be <vfprintf+0x1d2>
 7ba:	89 36       	cpi	r24, 0x69	; 105
 7bc:	41 f5       	brne	.+80     	; 0x80e <vfprintf+0x222>
 7be:	f8 01       	movw	r30, r16
 7c0:	37 fe       	sbrs	r3, 7
 7c2:	07 c0       	rjmp	.+14     	; 0x7d2 <vfprintf+0x1e6>
 7c4:	60 81       	ld	r22, Z
 7c6:	71 81       	ldd	r23, Z+1	; 0x01
 7c8:	82 81       	ldd	r24, Z+2	; 0x02
 7ca:	93 81       	ldd	r25, Z+3	; 0x03
 7cc:	0c 5f       	subi	r16, 0xFC	; 252
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	08 c0       	rjmp	.+16     	; 0x7e2 <vfprintf+0x1f6>
 7d2:	60 81       	ld	r22, Z
 7d4:	71 81       	ldd	r23, Z+1	; 0x01
 7d6:	07 2e       	mov	r0, r23
 7d8:	00 0c       	add	r0, r0
 7da:	88 0b       	sbc	r24, r24
 7dc:	99 0b       	sbc	r25, r25
 7de:	0e 5f       	subi	r16, 0xFE	; 254
 7e0:	1f 4f       	sbci	r17, 0xFF	; 255
 7e2:	f3 2d       	mov	r31, r3
 7e4:	ff 76       	andi	r31, 0x6F	; 111
 7e6:	3f 2e       	mov	r3, r31
 7e8:	97 ff       	sbrs	r25, 7
 7ea:	09 c0       	rjmp	.+18     	; 0x7fe <vfprintf+0x212>
 7ec:	90 95       	com	r25
 7ee:	80 95       	com	r24
 7f0:	70 95       	com	r23
 7f2:	61 95       	neg	r22
 7f4:	7f 4f       	sbci	r23, 0xFF	; 255
 7f6:	8f 4f       	sbci	r24, 0xFF	; 255
 7f8:	9f 4f       	sbci	r25, 0xFF	; 255
 7fa:	f0 68       	ori	r31, 0x80	; 128
 7fc:	3f 2e       	mov	r3, r31
 7fe:	2a e0       	ldi	r18, 0x0A	; 10
 800:	30 e0       	ldi	r19, 0x00	; 0
 802:	a3 01       	movw	r20, r6
 804:	0e 94 29 05 	call	0xa52	; 0xa52 <__ultoa_invert>
 808:	88 2e       	mov	r8, r24
 80a:	86 18       	sub	r8, r6
 80c:	45 c0       	rjmp	.+138    	; 0x898 <vfprintf+0x2ac>
 80e:	85 37       	cpi	r24, 0x75	; 117
 810:	31 f4       	brne	.+12     	; 0x81e <vfprintf+0x232>
 812:	23 2d       	mov	r18, r3
 814:	2f 7e       	andi	r18, 0xEF	; 239
 816:	b2 2e       	mov	r11, r18
 818:	2a e0       	ldi	r18, 0x0A	; 10
 81a:	30 e0       	ldi	r19, 0x00	; 0
 81c:	25 c0       	rjmp	.+74     	; 0x868 <vfprintf+0x27c>
 81e:	93 2d       	mov	r25, r3
 820:	99 7f       	andi	r25, 0xF9	; 249
 822:	b9 2e       	mov	r11, r25
 824:	8f 36       	cpi	r24, 0x6F	; 111
 826:	c1 f0       	breq	.+48     	; 0x858 <vfprintf+0x26c>
 828:	18 f4       	brcc	.+6      	; 0x830 <vfprintf+0x244>
 82a:	88 35       	cpi	r24, 0x58	; 88
 82c:	79 f0       	breq	.+30     	; 0x84c <vfprintf+0x260>
 82e:	b5 c0       	rjmp	.+362    	; 0x99a <vfprintf+0x3ae>
 830:	80 37       	cpi	r24, 0x70	; 112
 832:	19 f0       	breq	.+6      	; 0x83a <vfprintf+0x24e>
 834:	88 37       	cpi	r24, 0x78	; 120
 836:	21 f0       	breq	.+8      	; 0x840 <vfprintf+0x254>
 838:	b0 c0       	rjmp	.+352    	; 0x99a <vfprintf+0x3ae>
 83a:	e9 2f       	mov	r30, r25
 83c:	e0 61       	ori	r30, 0x10	; 16
 83e:	be 2e       	mov	r11, r30
 840:	b4 fe       	sbrs	r11, 4
 842:	0d c0       	rjmp	.+26     	; 0x85e <vfprintf+0x272>
 844:	fb 2d       	mov	r31, r11
 846:	f4 60       	ori	r31, 0x04	; 4
 848:	bf 2e       	mov	r11, r31
 84a:	09 c0       	rjmp	.+18     	; 0x85e <vfprintf+0x272>
 84c:	34 fe       	sbrs	r3, 4
 84e:	0a c0       	rjmp	.+20     	; 0x864 <vfprintf+0x278>
 850:	29 2f       	mov	r18, r25
 852:	26 60       	ori	r18, 0x06	; 6
 854:	b2 2e       	mov	r11, r18
 856:	06 c0       	rjmp	.+12     	; 0x864 <vfprintf+0x278>
 858:	28 e0       	ldi	r18, 0x08	; 8
 85a:	30 e0       	ldi	r19, 0x00	; 0
 85c:	05 c0       	rjmp	.+10     	; 0x868 <vfprintf+0x27c>
 85e:	20 e1       	ldi	r18, 0x10	; 16
 860:	30 e0       	ldi	r19, 0x00	; 0
 862:	02 c0       	rjmp	.+4      	; 0x868 <vfprintf+0x27c>
 864:	20 e1       	ldi	r18, 0x10	; 16
 866:	32 e0       	ldi	r19, 0x02	; 2
 868:	f8 01       	movw	r30, r16
 86a:	b7 fe       	sbrs	r11, 7
 86c:	07 c0       	rjmp	.+14     	; 0x87c <vfprintf+0x290>
 86e:	60 81       	ld	r22, Z
 870:	71 81       	ldd	r23, Z+1	; 0x01
 872:	82 81       	ldd	r24, Z+2	; 0x02
 874:	93 81       	ldd	r25, Z+3	; 0x03
 876:	0c 5f       	subi	r16, 0xFC	; 252
 878:	1f 4f       	sbci	r17, 0xFF	; 255
 87a:	06 c0       	rjmp	.+12     	; 0x888 <vfprintf+0x29c>
 87c:	60 81       	ld	r22, Z
 87e:	71 81       	ldd	r23, Z+1	; 0x01
 880:	80 e0       	ldi	r24, 0x00	; 0
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	0e 5f       	subi	r16, 0xFE	; 254
 886:	1f 4f       	sbci	r17, 0xFF	; 255
 888:	a3 01       	movw	r20, r6
 88a:	0e 94 29 05 	call	0xa52	; 0xa52 <__ultoa_invert>
 88e:	88 2e       	mov	r8, r24
 890:	86 18       	sub	r8, r6
 892:	fb 2d       	mov	r31, r11
 894:	ff 77       	andi	r31, 0x7F	; 127
 896:	3f 2e       	mov	r3, r31
 898:	36 fe       	sbrs	r3, 6
 89a:	0d c0       	rjmp	.+26     	; 0x8b6 <vfprintf+0x2ca>
 89c:	23 2d       	mov	r18, r3
 89e:	2e 7f       	andi	r18, 0xFE	; 254
 8a0:	a2 2e       	mov	r10, r18
 8a2:	89 14       	cp	r8, r9
 8a4:	58 f4       	brcc	.+22     	; 0x8bc <vfprintf+0x2d0>
 8a6:	34 fe       	sbrs	r3, 4
 8a8:	0b c0       	rjmp	.+22     	; 0x8c0 <vfprintf+0x2d4>
 8aa:	32 fc       	sbrc	r3, 2
 8ac:	09 c0       	rjmp	.+18     	; 0x8c0 <vfprintf+0x2d4>
 8ae:	83 2d       	mov	r24, r3
 8b0:	8e 7e       	andi	r24, 0xEE	; 238
 8b2:	a8 2e       	mov	r10, r24
 8b4:	05 c0       	rjmp	.+10     	; 0x8c0 <vfprintf+0x2d4>
 8b6:	b8 2c       	mov	r11, r8
 8b8:	a3 2c       	mov	r10, r3
 8ba:	03 c0       	rjmp	.+6      	; 0x8c2 <vfprintf+0x2d6>
 8bc:	b8 2c       	mov	r11, r8
 8be:	01 c0       	rjmp	.+2      	; 0x8c2 <vfprintf+0x2d6>
 8c0:	b9 2c       	mov	r11, r9
 8c2:	a4 fe       	sbrs	r10, 4
 8c4:	0f c0       	rjmp	.+30     	; 0x8e4 <vfprintf+0x2f8>
 8c6:	fe 01       	movw	r30, r28
 8c8:	e8 0d       	add	r30, r8
 8ca:	f1 1d       	adc	r31, r1
 8cc:	80 81       	ld	r24, Z
 8ce:	80 33       	cpi	r24, 0x30	; 48
 8d0:	21 f4       	brne	.+8      	; 0x8da <vfprintf+0x2ee>
 8d2:	9a 2d       	mov	r25, r10
 8d4:	99 7e       	andi	r25, 0xE9	; 233
 8d6:	a9 2e       	mov	r10, r25
 8d8:	09 c0       	rjmp	.+18     	; 0x8ec <vfprintf+0x300>
 8da:	a2 fe       	sbrs	r10, 2
 8dc:	06 c0       	rjmp	.+12     	; 0x8ea <vfprintf+0x2fe>
 8de:	b3 94       	inc	r11
 8e0:	b3 94       	inc	r11
 8e2:	04 c0       	rjmp	.+8      	; 0x8ec <vfprintf+0x300>
 8e4:	8a 2d       	mov	r24, r10
 8e6:	86 78       	andi	r24, 0x86	; 134
 8e8:	09 f0       	breq	.+2      	; 0x8ec <vfprintf+0x300>
 8ea:	b3 94       	inc	r11
 8ec:	a3 fc       	sbrc	r10, 3
 8ee:	11 c0       	rjmp	.+34     	; 0x912 <vfprintf+0x326>
 8f0:	a0 fe       	sbrs	r10, 0
 8f2:	06 c0       	rjmp	.+12     	; 0x900 <vfprintf+0x314>
 8f4:	b2 14       	cp	r11, r2
 8f6:	88 f4       	brcc	.+34     	; 0x91a <vfprintf+0x32e>
 8f8:	28 0c       	add	r2, r8
 8fa:	92 2c       	mov	r9, r2
 8fc:	9b 18       	sub	r9, r11
 8fe:	0e c0       	rjmp	.+28     	; 0x91c <vfprintf+0x330>
 900:	b2 14       	cp	r11, r2
 902:	60 f4       	brcc	.+24     	; 0x91c <vfprintf+0x330>
 904:	b6 01       	movw	r22, r12
 906:	80 e2       	ldi	r24, 0x20	; 32
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 90e:	b3 94       	inc	r11
 910:	f7 cf       	rjmp	.-18     	; 0x900 <vfprintf+0x314>
 912:	b2 14       	cp	r11, r2
 914:	18 f4       	brcc	.+6      	; 0x91c <vfprintf+0x330>
 916:	2b 18       	sub	r2, r11
 918:	02 c0       	rjmp	.+4      	; 0x91e <vfprintf+0x332>
 91a:	98 2c       	mov	r9, r8
 91c:	21 2c       	mov	r2, r1
 91e:	a4 fe       	sbrs	r10, 4
 920:	10 c0       	rjmp	.+32     	; 0x942 <vfprintf+0x356>
 922:	b6 01       	movw	r22, r12
 924:	80 e3       	ldi	r24, 0x30	; 48
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 92c:	a2 fe       	sbrs	r10, 2
 92e:	17 c0       	rjmp	.+46     	; 0x95e <vfprintf+0x372>
 930:	a1 fc       	sbrc	r10, 1
 932:	03 c0       	rjmp	.+6      	; 0x93a <vfprintf+0x34e>
 934:	88 e7       	ldi	r24, 0x78	; 120
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	02 c0       	rjmp	.+4      	; 0x93e <vfprintf+0x352>
 93a:	88 e5       	ldi	r24, 0x58	; 88
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	b6 01       	movw	r22, r12
 940:	0c c0       	rjmp	.+24     	; 0x95a <vfprintf+0x36e>
 942:	8a 2d       	mov	r24, r10
 944:	86 78       	andi	r24, 0x86	; 134
 946:	59 f0       	breq	.+22     	; 0x95e <vfprintf+0x372>
 948:	a1 fe       	sbrs	r10, 1
 94a:	02 c0       	rjmp	.+4      	; 0x950 <vfprintf+0x364>
 94c:	8b e2       	ldi	r24, 0x2B	; 43
 94e:	01 c0       	rjmp	.+2      	; 0x952 <vfprintf+0x366>
 950:	80 e2       	ldi	r24, 0x20	; 32
 952:	a7 fc       	sbrc	r10, 7
 954:	8d e2       	ldi	r24, 0x2D	; 45
 956:	b6 01       	movw	r22, r12
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 95e:	89 14       	cp	r8, r9
 960:	38 f4       	brcc	.+14     	; 0x970 <vfprintf+0x384>
 962:	b6 01       	movw	r22, r12
 964:	80 e3       	ldi	r24, 0x30	; 48
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 96c:	9a 94       	dec	r9
 96e:	f7 cf       	rjmp	.-18     	; 0x95e <vfprintf+0x372>
 970:	8a 94       	dec	r8
 972:	f3 01       	movw	r30, r6
 974:	e8 0d       	add	r30, r8
 976:	f1 1d       	adc	r31, r1
 978:	80 81       	ld	r24, Z
 97a:	b6 01       	movw	r22, r12
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 982:	81 10       	cpse	r8, r1
 984:	f5 cf       	rjmp	.-22     	; 0x970 <vfprintf+0x384>
 986:	22 20       	and	r2, r2
 988:	09 f4       	brne	.+2      	; 0x98c <vfprintf+0x3a0>
 98a:	42 ce       	rjmp	.-892    	; 0x610 <vfprintf+0x24>
 98c:	b6 01       	movw	r22, r12
 98e:	80 e2       	ldi	r24, 0x20	; 32
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	0e 94 ed 04 	call	0x9da	; 0x9da <fputc>
 996:	2a 94       	dec	r2
 998:	f6 cf       	rjmp	.-20     	; 0x986 <vfprintf+0x39a>
 99a:	f6 01       	movw	r30, r12
 99c:	86 81       	ldd	r24, Z+6	; 0x06
 99e:	97 81       	ldd	r25, Z+7	; 0x07
 9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <vfprintf+0x3ba>
 9a2:	8f ef       	ldi	r24, 0xFF	; 255
 9a4:	9f ef       	ldi	r25, 0xFF	; 255
 9a6:	2b 96       	adiw	r28, 0x0b	; 11
 9a8:	e2 e1       	ldi	r30, 0x12	; 18
 9aa:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__epilogue_restores__>

000009ae <strnlen_P>:
 9ae:	fc 01       	movw	r30, r24
 9b0:	05 90       	lpm	r0, Z+
 9b2:	61 50       	subi	r22, 0x01	; 1
 9b4:	70 40       	sbci	r23, 0x00	; 0
 9b6:	01 10       	cpse	r0, r1
 9b8:	d8 f7       	brcc	.-10     	; 0x9b0 <strnlen_P+0x2>
 9ba:	80 95       	com	r24
 9bc:	90 95       	com	r25
 9be:	8e 0f       	add	r24, r30
 9c0:	9f 1f       	adc	r25, r31
 9c2:	08 95       	ret

000009c4 <strnlen>:
 9c4:	fc 01       	movw	r30, r24
 9c6:	61 50       	subi	r22, 0x01	; 1
 9c8:	70 40       	sbci	r23, 0x00	; 0
 9ca:	01 90       	ld	r0, Z+
 9cc:	01 10       	cpse	r0, r1
 9ce:	d8 f7       	brcc	.-10     	; 0x9c6 <strnlen+0x2>
 9d0:	80 95       	com	r24
 9d2:	90 95       	com	r25
 9d4:	8e 0f       	add	r24, r30
 9d6:	9f 1f       	adc	r25, r31
 9d8:	08 95       	ret

000009da <fputc>:
 9da:	0f 93       	push	r16
 9dc:	1f 93       	push	r17
 9de:	cf 93       	push	r28
 9e0:	df 93       	push	r29
 9e2:	fb 01       	movw	r30, r22
 9e4:	23 81       	ldd	r18, Z+3	; 0x03
 9e6:	21 fd       	sbrc	r18, 1
 9e8:	03 c0       	rjmp	.+6      	; 0x9f0 <fputc+0x16>
 9ea:	8f ef       	ldi	r24, 0xFF	; 255
 9ec:	9f ef       	ldi	r25, 0xFF	; 255
 9ee:	2c c0       	rjmp	.+88     	; 0xa48 <fputc+0x6e>
 9f0:	22 ff       	sbrs	r18, 2
 9f2:	16 c0       	rjmp	.+44     	; 0xa20 <fputc+0x46>
 9f4:	46 81       	ldd	r20, Z+6	; 0x06
 9f6:	57 81       	ldd	r21, Z+7	; 0x07
 9f8:	24 81       	ldd	r18, Z+4	; 0x04
 9fa:	35 81       	ldd	r19, Z+5	; 0x05
 9fc:	42 17       	cp	r20, r18
 9fe:	53 07       	cpc	r21, r19
 a00:	44 f4       	brge	.+16     	; 0xa12 <fputc+0x38>
 a02:	a0 81       	ld	r26, Z
 a04:	b1 81       	ldd	r27, Z+1	; 0x01
 a06:	9d 01       	movw	r18, r26
 a08:	2f 5f       	subi	r18, 0xFF	; 255
 a0a:	3f 4f       	sbci	r19, 0xFF	; 255
 a0c:	20 83       	st	Z, r18
 a0e:	31 83       	std	Z+1, r19	; 0x01
 a10:	8c 93       	st	X, r24
 a12:	26 81       	ldd	r18, Z+6	; 0x06
 a14:	37 81       	ldd	r19, Z+7	; 0x07
 a16:	2f 5f       	subi	r18, 0xFF	; 255
 a18:	3f 4f       	sbci	r19, 0xFF	; 255
 a1a:	26 83       	std	Z+6, r18	; 0x06
 a1c:	37 83       	std	Z+7, r19	; 0x07
 a1e:	14 c0       	rjmp	.+40     	; 0xa48 <fputc+0x6e>
 a20:	8b 01       	movw	r16, r22
 a22:	ec 01       	movw	r28, r24
 a24:	fb 01       	movw	r30, r22
 a26:	00 84       	ldd	r0, Z+8	; 0x08
 a28:	f1 85       	ldd	r31, Z+9	; 0x09
 a2a:	e0 2d       	mov	r30, r0
 a2c:	09 95       	icall
 a2e:	89 2b       	or	r24, r25
 a30:	e1 f6       	brne	.-72     	; 0x9ea <fputc+0x10>
 a32:	d8 01       	movw	r26, r16
 a34:	16 96       	adiw	r26, 0x06	; 6
 a36:	8d 91       	ld	r24, X+
 a38:	9c 91       	ld	r25, X
 a3a:	17 97       	sbiw	r26, 0x07	; 7
 a3c:	01 96       	adiw	r24, 0x01	; 1
 a3e:	16 96       	adiw	r26, 0x06	; 6
 a40:	8d 93       	st	X+, r24
 a42:	9c 93       	st	X, r25
 a44:	17 97       	sbiw	r26, 0x07	; 7
 a46:	ce 01       	movw	r24, r28
 a48:	df 91       	pop	r29
 a4a:	cf 91       	pop	r28
 a4c:	1f 91       	pop	r17
 a4e:	0f 91       	pop	r16
 a50:	08 95       	ret

00000a52 <__ultoa_invert>:
 a52:	fa 01       	movw	r30, r20
 a54:	aa 27       	eor	r26, r26
 a56:	28 30       	cpi	r18, 0x08	; 8
 a58:	51 f1       	breq	.+84     	; 0xaae <__ultoa_invert+0x5c>
 a5a:	20 31       	cpi	r18, 0x10	; 16
 a5c:	81 f1       	breq	.+96     	; 0xabe <__ultoa_invert+0x6c>
 a5e:	e8 94       	clt
 a60:	6f 93       	push	r22
 a62:	6e 7f       	andi	r22, 0xFE	; 254
 a64:	6e 5f       	subi	r22, 0xFE	; 254
 a66:	7f 4f       	sbci	r23, 0xFF	; 255
 a68:	8f 4f       	sbci	r24, 0xFF	; 255
 a6a:	9f 4f       	sbci	r25, 0xFF	; 255
 a6c:	af 4f       	sbci	r26, 0xFF	; 255
 a6e:	b1 e0       	ldi	r27, 0x01	; 1
 a70:	3e d0       	rcall	.+124    	; 0xaee <__ultoa_invert+0x9c>
 a72:	b4 e0       	ldi	r27, 0x04	; 4
 a74:	3c d0       	rcall	.+120    	; 0xaee <__ultoa_invert+0x9c>
 a76:	67 0f       	add	r22, r23
 a78:	78 1f       	adc	r23, r24
 a7a:	89 1f       	adc	r24, r25
 a7c:	9a 1f       	adc	r25, r26
 a7e:	a1 1d       	adc	r26, r1
 a80:	68 0f       	add	r22, r24
 a82:	79 1f       	adc	r23, r25
 a84:	8a 1f       	adc	r24, r26
 a86:	91 1d       	adc	r25, r1
 a88:	a1 1d       	adc	r26, r1
 a8a:	6a 0f       	add	r22, r26
 a8c:	71 1d       	adc	r23, r1
 a8e:	81 1d       	adc	r24, r1
 a90:	91 1d       	adc	r25, r1
 a92:	a1 1d       	adc	r26, r1
 a94:	20 d0       	rcall	.+64     	; 0xad6 <__ultoa_invert+0x84>
 a96:	09 f4       	brne	.+2      	; 0xa9a <__ultoa_invert+0x48>
 a98:	68 94       	set
 a9a:	3f 91       	pop	r19
 a9c:	2a e0       	ldi	r18, 0x0A	; 10
 a9e:	26 9f       	mul	r18, r22
 aa0:	11 24       	eor	r1, r1
 aa2:	30 19       	sub	r19, r0
 aa4:	30 5d       	subi	r19, 0xD0	; 208
 aa6:	31 93       	st	Z+, r19
 aa8:	de f6       	brtc	.-74     	; 0xa60 <__ultoa_invert+0xe>
 aaa:	cf 01       	movw	r24, r30
 aac:	08 95       	ret
 aae:	46 2f       	mov	r20, r22
 ab0:	47 70       	andi	r20, 0x07	; 7
 ab2:	40 5d       	subi	r20, 0xD0	; 208
 ab4:	41 93       	st	Z+, r20
 ab6:	b3 e0       	ldi	r27, 0x03	; 3
 ab8:	0f d0       	rcall	.+30     	; 0xad8 <__ultoa_invert+0x86>
 aba:	c9 f7       	brne	.-14     	; 0xaae <__ultoa_invert+0x5c>
 abc:	f6 cf       	rjmp	.-20     	; 0xaaa <__ultoa_invert+0x58>
 abe:	46 2f       	mov	r20, r22
 ac0:	4f 70       	andi	r20, 0x0F	; 15
 ac2:	40 5d       	subi	r20, 0xD0	; 208
 ac4:	4a 33       	cpi	r20, 0x3A	; 58
 ac6:	18 f0       	brcs	.+6      	; 0xace <__ultoa_invert+0x7c>
 ac8:	49 5d       	subi	r20, 0xD9	; 217
 aca:	31 fd       	sbrc	r19, 1
 acc:	40 52       	subi	r20, 0x20	; 32
 ace:	41 93       	st	Z+, r20
 ad0:	02 d0       	rcall	.+4      	; 0xad6 <__ultoa_invert+0x84>
 ad2:	a9 f7       	brne	.-22     	; 0xabe <__ultoa_invert+0x6c>
 ad4:	ea cf       	rjmp	.-44     	; 0xaaa <__ultoa_invert+0x58>
 ad6:	b4 e0       	ldi	r27, 0x04	; 4
 ad8:	a6 95       	lsr	r26
 ada:	97 95       	ror	r25
 adc:	87 95       	ror	r24
 ade:	77 95       	ror	r23
 ae0:	67 95       	ror	r22
 ae2:	ba 95       	dec	r27
 ae4:	c9 f7       	brne	.-14     	; 0xad8 <__ultoa_invert+0x86>
 ae6:	00 97       	sbiw	r24, 0x00	; 0
 ae8:	61 05       	cpc	r22, r1
 aea:	71 05       	cpc	r23, r1
 aec:	08 95       	ret
 aee:	9b 01       	movw	r18, r22
 af0:	ac 01       	movw	r20, r24
 af2:	0a 2e       	mov	r0, r26
 af4:	06 94       	lsr	r0
 af6:	57 95       	ror	r21
 af8:	47 95       	ror	r20
 afa:	37 95       	ror	r19
 afc:	27 95       	ror	r18
 afe:	ba 95       	dec	r27
 b00:	c9 f7       	brne	.-14     	; 0xaf4 <__ultoa_invert+0xa2>
 b02:	62 0f       	add	r22, r18
 b04:	73 1f       	adc	r23, r19
 b06:	84 1f       	adc	r24, r20
 b08:	95 1f       	adc	r25, r21
 b0a:	a0 1d       	adc	r26, r0
 b0c:	08 95       	ret

00000b0e <__prologue_saves__>:
 b0e:	2f 92       	push	r2
 b10:	3f 92       	push	r3
 b12:	4f 92       	push	r4
 b14:	5f 92       	push	r5
 b16:	6f 92       	push	r6
 b18:	7f 92       	push	r7
 b1a:	8f 92       	push	r8
 b1c:	9f 92       	push	r9
 b1e:	af 92       	push	r10
 b20:	bf 92       	push	r11
 b22:	cf 92       	push	r12
 b24:	df 92       	push	r13
 b26:	ef 92       	push	r14
 b28:	ff 92       	push	r15
 b2a:	0f 93       	push	r16
 b2c:	1f 93       	push	r17
 b2e:	cf 93       	push	r28
 b30:	df 93       	push	r29
 b32:	cd b7       	in	r28, 0x3d	; 61
 b34:	de b7       	in	r29, 0x3e	; 62
 b36:	ca 1b       	sub	r28, r26
 b38:	db 0b       	sbc	r29, r27
 b3a:	cd bf       	out	0x3d, r28	; 61
 b3c:	de bf       	out	0x3e, r29	; 62
 b3e:	09 94       	ijmp

00000b40 <__epilogue_restores__>:
 b40:	2a 88       	ldd	r2, Y+18	; 0x12
 b42:	39 88       	ldd	r3, Y+17	; 0x11
 b44:	48 88       	ldd	r4, Y+16	; 0x10
 b46:	5f 84       	ldd	r5, Y+15	; 0x0f
 b48:	6e 84       	ldd	r6, Y+14	; 0x0e
 b4a:	7d 84       	ldd	r7, Y+13	; 0x0d
 b4c:	8c 84       	ldd	r8, Y+12	; 0x0c
 b4e:	9b 84       	ldd	r9, Y+11	; 0x0b
 b50:	aa 84       	ldd	r10, Y+10	; 0x0a
 b52:	b9 84       	ldd	r11, Y+9	; 0x09
 b54:	c8 84       	ldd	r12, Y+8	; 0x08
 b56:	df 80       	ldd	r13, Y+7	; 0x07
 b58:	ee 80       	ldd	r14, Y+6	; 0x06
 b5a:	fd 80       	ldd	r15, Y+5	; 0x05
 b5c:	0c 81       	ldd	r16, Y+4	; 0x04
 b5e:	1b 81       	ldd	r17, Y+3	; 0x03
 b60:	aa 81       	ldd	r26, Y+2	; 0x02
 b62:	b9 81       	ldd	r27, Y+1	; 0x01
 b64:	ce 0f       	add	r28, r30
 b66:	d1 1d       	adc	r29, r1
 b68:	cd bf       	out	0x3d, r28	; 61
 b6a:	de bf       	out	0x3e, r29	; 62
 b6c:	ed 01       	movw	r28, r26
 b6e:	08 95       	ret

00000b70 <_exit>:
 b70:	f8 94       	cli

00000b72 <__stop_program>:
 b72:	ff cf       	rjmp	.-2      	; 0xb72 <__stop_program>
